plugins {
	id 'java'
	id 'maven-publish'
	id 'java-gradle-plugin'
	id 'eclipse'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

group 'net.ornithemc'
archivesBaseName = project.name
def baseVersion = '1.7'

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = baseVersion + '.' + ENV.BUILD_NUMBER
} else {
	version = baseVersion + '.local'
}

repositories {
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net'
	}
	maven {
		name = 'Ornithe'
		url = 'https://maven.ornithemc.net/releases'
	}
	mavenCentral()
}

dependencies {
	implementation gradleApi()

	compileOnly("net.fabricmc:fabric-loom:" + baseVersion + "-SNAPSHOT")

	implementation("com.google.code.gson:gson:2.10.1")
	implementation("org.ow2.asm:asm:9.6")
	implementation("org.ow2.asm:asm-analysis:9.6")
	implementation("org.ow2.asm:asm-commons:9.6")
	implementation("org.ow2.asm:asm-tree:9.6")
	implementation("org.ow2.asm:asm-util:9.6")
	implementation("net.fabricmc:mapping-io:0.5.1")
	implementation("net.ornithemc:exceptor:1.0.0")
	implementation("net.ornithemc:mapping-utils:0.14.0")
	implementation("net.ornithemc:nester:1.3.1")
	implementation("io.github.gaming32:signature-changer:1.0.0-beta.2")
	implementation("com.vdurmont:semver4j:3.1.0")
}

jar {
	manifest {
		attributes 'Implementation-Version': project.version
	}
}

java {
	withSourcesJar()
}

gradlePlugin {
	plugins {
		ploceus {
			id = 'ploceus'
			implementationClass = 'net.ornithemc.ploceus.PloceusGradlePlugin'
		}
	}
}

import org.w3c.dom.Document
import org.w3c.dom.Element
import org.w3c.dom.Node

publishing {
	publications {
		plugin(MavenPublication) { publication ->
			groupId project.group
			artifactId project.archivesBaseName
			version project.version

			from components.java
		}

		// Also publish a snapshot so people can use the latest version if they wish
		snapshot(MavenPublication) { publication ->
			groupId project.group
			artifactId project.archivesBaseName
			version baseVersion + '-SNAPSHOT'

			from components.java
		}

		// Manually crate the plugin marker for snapshot versions
		snapshotPlugin(MavenPublication) { publication ->
			groupId 'ploceus'
			artifactId 'ploceus.gradle.plugin'
			version baseVersion + '-SNAPSHOT'

			pom.withXml({
				// Based off org.gradle.plugin.devel.plugins.MavenPluginPublishPlugin
				Element root = asElement()
				Document document = root.getOwnerDocument()
				Node dependencies = root.appendChild(document.createElement('dependencies'))
				Node dependency = dependencies.appendChild(document.createElement('dependency'))
				Node groupId = dependency.appendChild(document.createElement('groupId'))
				groupId.setTextContent('net.ornithemc')
				Node artifactId = dependency.appendChild(document.createElement('artifactId'))
				artifactId.setTextContent('ploceus')
				Node version = dependency.appendChild(document.createElement('version'))
				version.setTextContent(baseVersion + '-SNAPSHOT')
			})
		}
	}
	repositories {
		maven {
			name = 'release'
			if (ENV.MAVEN_URL) {
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
		maven {
			name = "snapshot"
			if (ENV.SNAPSHOTS_URL) {
				url ENV.SNAPSHOTS_URL
				credentials {
					username ENV.SNAPSHOTS_USERNAME
					password ENV.SNAPSHOTS_PASSWORD
				}
			}
		}
	}
}

tasks.withType(PublishToMavenRepository) {
	onlyIf {
		(repository == publishing.repositories.release && publication == publishing.publications.plugin)
				||
				(repository == publishing.repositories.snapshot
						&& (publication == publishing.publications.snapshot
						|| publication == publishing.publications.snapshotPlugin))
				|| (repository == publishing.repositories.release && publication.name == "ploceusPluginMarkerMaven")
	}
}
